{"version":3,"sources":["Slider.js","App.js","index.js"],"names":["Slider","count","children","TransitionGroup","component","CSSTransition","in","appear","key","timeout","classNames","App","nextContact","l","state","contacts","length","setState","prevState","currentContact","this","styles","container","display","justifyContent","width","height","btn","style","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"sRAGaA,EAAS,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC3B,OACG,kBAACC,EAAA,EAAD,CAAiBC,UAAW,MACxB,kBAACC,EAAA,EAAD,CACKC,IAAK,EACLC,QAAS,EACTC,IAAMP,EACNQ,QAAU,IACVC,WAAa,SAEbR,KCTKS,G,kBACnB,aAAc,IAAD,8BACX,+CAUFC,YAAc,WACZ,IAAMC,EAAI,EAAKC,MAAMC,SAASC,OAAQ,EAClC,EAAKF,MAAMb,QAAUY,EACrB,EAAKI,UAAS,SAAAC,GAAS,MAAK,CAC1BjB,MAAOiB,EAAUjB,MAAQ,EACzBkB,eAAgBD,EAAUH,SAASG,EAAUjB,MAAQ,OAGzD,EAAKgB,UAAS,SAAAC,GAAS,MAAK,CAC1BjB,MAAO,EACPkB,eAAgBD,EAAUH,SAAS,QAnBvC,EAAKD,MAAO,CACVC,SAAU,CAAC,OAAQ,QAAS,SAC5Bd,MAAO,GAJE,E,sEA0BH,IAAD,EAC2BmB,KAAKN,MAA/Bb,EADD,EACCA,MAAOkB,EADR,EACQA,eACTE,EAAS,CACbC,UAAW,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,MAAO,QAASC,OAAQ,KAChFC,IAAK,CAAEF,MAAO,OAAQF,QAAS,OAAQC,eAAgB,WAEzD,OACE,6BACE,yBAAKI,MAAQP,EAAOC,WAClB,kBAAC,EAAD,CAAQrB,MAAQA,GACZ,4BAAMkB,KAGZ,yBAAKS,MAAQP,EAAOM,KAClB,4BAAQE,QAAUT,KAAKR,aAAvB,c,GAzCuBkB,cCCjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6673bb6d.chunk.js","sourcesContent":["import React from 'react';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\n\nexport const Slider = ({count, children}) => {\n    return (\n       <TransitionGroup component={null}>\n           <CSSTransition\n                in={ true }\n                appear={ false }\n                key={ count }\n                timeout={ 900 }\n                classNames={ \"slide\" }\n           >\n               {children}\n           </CSSTransition>\n       </TransitionGroup>\n    );\n};\n","import React, { Component } from 'react';\nimport {Slider} from './Slider';\nimport './styles.css';\n\nexport default class App extends Component {\n  constructor(){\n    super()\n    this.state ={\n      contacts: ['Joga', 'Leyla', 'Blake'],\n      count: 0\n    }\n  }\n\n  // Increment \"count\" by 1 if \"count\" !== contacts.lenght\n      // else: resets back to first contact\n\n  nextContact = () => {\n    const l = this.state.contacts.length -1\n    if (this.state.count !== l ) {\n        this.setState(prevState => ({\n          count: prevState.count + 1,\n          currentContact: prevState.contacts[prevState.count + 1]\n        }))\n    }else{\n      this.setState(prevState => ({\n        count: 0,\n        currentContact: prevState.contacts[0]\n      }))\n    }\n  }\n\n  render() {\n    const { count, currentContact } = this.state\n    const styles = {\n      container: { display: 'flex', justifyContent: 'center', width: '100vw', height: 300 },\n      btn: { width: '100%', display: 'flex', justifyContent: 'center' }\n    }\n    return (\n      <div>\n        <div style={ styles.container }>\n          <Slider count={ count }>\n              <h1>{ currentContact }</h1>\n          </Slider>\n        </div>\n        <div style={ styles.btn }>\n          <button onClick={ this.nextContact }>NEXT</button>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}